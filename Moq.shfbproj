<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="3.5">
	<PropertyGroup>
		<!-- The configuration and platform will be used to determine which
				 assemblies to include from solution and project documentation
				 sources -->
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
		<SchemaVersion>2.0</SchemaVersion>
		<ProjectGuid>{625556c0-8f59-4f6e-a1cb-531db1cc0935}</ProjectGuid>
		<SHFBSchemaVersion>1.9.0.0</SHFBSchemaVersion>
		<!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual
				 Studio adds them anyway -->
		<AssemblyName>Documentation</AssemblyName>
		<RootNamespace>Documentation</RootNamespace>
		<Name>Documentation</Name>
		<!-- SHFB properties -->
		<OutputPath>..\build\Help\</OutputPath>
		<HtmlHelpName>Moq</HtmlHelpName>
		<Language>en-US</Language>
		<ApiFilter>
			<Filter entryType="Namespace" fullName="Moq" isExposed="True">
	<Filter entryType="Interface" fullName="Moq.IHideObjectMembers" filterName="IHideObjectMembers" isExposed="False" />
	<Filter entryType="Interface" fullName="Moq.IMocked" filterName="IMocked" isExposed="False" />
	<Filter entryType="Interface" fullName="Moq.IMocked`1" filterName="IMocked`1" isExposed="False" />
	<Filter entryType="Class" fullName="Moq.Match" filterName="Match" isExposed="False" />
	<Filter entryType="Class" fullName="Moq.Match`1" filterName="Match`1" isExposed="False" />
	<Filter entryType="Class" fullName="Moq.MatcherAttribute" filterName="MatcherAttribute" isExposed="False" />
	<Filter entryType="Class" fullName="Moq.Mock`1" filterName="Mock`1" isExposed="True">
		<Filter entryType="Method" fullName="Moq.Mock`1.Expect" filterName="Expect" isExposed="False" />
		<Filter entryType="Method" fullName="Moq.Mock`1.ExpectGet" filterName="ExpectGet" isExposed="False" />
		<Filter entryType="Method" fullName="Moq.Mock`1.ExpectSet" filterName="ExpectSet" isExposed="False" />
	</Filter>
	<Filter entryType="Class" fullName="Moq.MockLegacyExtensions" filterName="MockLegacyExtensions" isExposed="False" />
</Filter>
<Filter entryType="Namespace" fullName="Moq.Language" isExposed="True">
	<Filter entryType="Interface" fullName="Moq.Language.IOccurrence" filterName="IOccurrence" isExposed="False" />
</Filter>
<Filter entryType="Namespace" fullName="Moq.Language.Flow" isExposed="False" />
<Filter entryType="Namespace" fullName="Moq" isExposed="True">
	<Filter entryType="Class" fullName="Moq.MockLegacyExtensions" filterName="MockLegacyExtensions" isExposed="False" />
</Filter></ApiFilter>
		<ProjectSummary>
		</ProjectSummary>
		<MissingTags>Summary, AutoDocumentCtors, Namespace</MissingTags>
		<VisibleItems>InheritedMembers, Protected, SealedProtected</VisibleItems>
		<HtmlHelp1xCompilerPath>..\build\HTML Help Workshop\</HtmlHelp1xCompilerPath>
		<HtmlHelp2xCompilerPath>
		</HtmlHelp2xCompilerPath>
		<SandcastlePath>..\build\Sandcastle\</SandcastlePath>
		<WorkingPath>
		</WorkingPath>
		<BuildLogFile>
		</BuildLogFile>
		<HelpFileFormat>HtmlHelp1, Website</HelpFileFormat>
		<FrameworkVersion>4.0.30319</FrameworkVersion>
		<HelpTitle>Moq</HelpTitle>
		<FeedbackEMailAddress>moqdisc%40googlegroups.com</FeedbackEMailAddress>
		<PresentationStyle>vs2005</PresentationStyle>
		<NamingMethod>HashedMemberName</NamingMethod>
		<SyntaxFilters>CSharp</SyntaxFilters>
		<ComponentConfigurations>
			<ComponentConfig id="Code Block Component" enabled="True">
				<component id="Code Block Component" type="SandcastleBuilder.Components.CodeBlockComponent" assembly="{@SHFBFolder}SandcastleBuilder.Components.dll">
					<!-- Base path for relative filenames in source attributes
								 (optional) -->
					<basePath value="{@ProjectFolder}" />
					<!-- Connect to language filter (optional).  If omitted,
								 language filtering is enabled by default. -->
					<languageFilter value="true" />
					<!-- Code colorizer options (required).
								 Attributes:
										Language syntax configuration file (required)
										XSLT style file (required)
										"Copy" image file URL (required)
										Default language (optional)
										Enable line numbering (optional)
										Enable outlining (optional)
										Tab size override (optional, 0 = Use syntax file setting)
										Use language name as default title (optional) -->
					<colorizer syntaxFile="{@SHFBFolder}Colorizer\highlight.xml" styleFile="{@SHFBFolder}Colorizer\highlight.xsl" copyImageUrl="../icons/CopyCode.gif" language="cs" numberLines="false" outlining="false" tabSize="0" defaultTitle="true" />
				</component>
			</ComponentConfig>
<ComponentConfig id="Post-transform Component" enabled="True"><component id="Post-transform Component" type="SandcastleBuilder.Components.PostTransformComponent" assembly="{@SHFBFolder}SandcastleBuilder.Components.dll"><!-- Code colorizer files (required).
								 Attributes:
										Stylesheet file (required)
										Script file (required)
										"Copy" image file (required) --><colorizer stylesheet="{@SHFBFolder}Colorizer\highlight.css" scriptFile="{@SHFBFolder}Colorizer\highlight.js" copyImage="{@SHFBFolder}Colorizer\CopyCode.gif" /><!-- Base output path for the files (required).  This should match
								 the parent folder of the output path of the HTML files (see
								 SaveComponent). --><outputPaths>{@HelpFormatOutputPaths}</outputPaths><!-- Logo image file (optional).  Filename is required. The height,
								 width, altText, placement, and alignment attributes are
								 optional. --><logoFile filename="" height="0" width="0" altText="" placement="left" alignment="left" /></component></ComponentConfig>
<ComponentConfig id="Cached Framework Comments Index Data" enabled="False"><component id="Cached Framework Comments Index Data" type="SandcastleBuilder.Components.CachedCopyFromIndexComponent" assembly="{@SHFBFolder}SandcastleBuilder.Components.dll"><index name="comments" value="/doc/members/member" key="@name" cache="100">
{@CachedFrameworkCommentList}
{@CommentFileList}
						</index><copy name="comments" source="*" target="/document/comments" /></component></ComponentConfig>
<ComponentConfig id="Cached MSDN URL References" enabled="False"><component id="Cached MSDN URL References" type="SandcastleBuilder.Components.CachedResolveReferenceLinksComponent" assembly="{@SHFBFolder}SandcastleBuilder.Components.dll"><cache filename="{@AppDataFolder}Cache\MsdnUrl.cache" /><targets base="{@SandcastlePath}Data\Reflection" recurse="true" files="*.xml" type="{@SDKLinks}" /><targets files="reflection.xml" type="{@ProjectLinks}" /></component></ComponentConfig>
<ComponentConfig id="Cached Reflection Index Data" enabled="False"><component id="Cached Reflection Index Data" type="SandcastleBuilder.Components.CachedCopyFromIndexComponent" assembly="{@SHFBFolder}SandcastleBuilder.Components.dll"><index name="reflection" value="/reflection/apis/api" key="@id" cache="10"><cache base="{@SandcastlePath}Data\Reflection" recurse="true" files="*.xml" cacheFile="{@AppDataFolder}Cache\Reflection.cache" /><data files="reflection.xml" /></index><copy name="reflection" source="*" target="/document/reference" /></component></ComponentConfig></ComponentConfigurations>
		<DocumentationSources>
			<DocumentationSource sourceFile="Source\bin\Release\Moq.dll" />
<DocumentationSource sourceFile="Source\bin\Release\Moq.xml" /></DocumentationSources>
		<NamespaceSummaries>
			<NamespaceSummaryItem name="(global)" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.Core" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.Core.Configuration" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.Core.Interceptor" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.Core.Internal" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.Core.Logging" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.Core.Logging.Factories" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.Core.Resource" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.DynamicProxy" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.DynamicProxy.Generators" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.DynamicProxy.Generators.Emitters" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.DynamicProxy.Generators.Emitters.CodeBuilders" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.DynamicProxy.Generators.Emitters.SimpleAST" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Castle.DynamicProxy.Serialization" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Moq" isDocumented="True" xmlns="">Root namespace of Moq (pronounced "Mock-you" or just "Mock"), the only mocking library for .NET developed from scratch to take full advantage of .NET 3.5 (i.e. Linq expression trees) and C# 3.0 features (i.e. lambda expressions) that make it the most productive, simple and refactoring-friendly mocking library available.
&lt;p&gt;
See the &lt;a href="https://github.com/moq/moq4/wiki/Quickstart"&gt;online quickstarts&lt;/a&gt; for more examples than those available in this code documentation.
&lt;/p&gt;
&lt;p&gt;The Mock&amp;lt;T&amp;gt; class is the core of the library, so it's a good place to start.&lt;/p&gt;
You can also read &lt;a href="http://blogsearch.google.com/blogsearch?q=moq+mock"&gt;blog entries&lt;/a&gt; from around the world about Moq.</NamespaceSummaryItem>
			<NamespaceSummaryItem name="Moq.Language" isDocumented="True" xmlns="">This namespace defines the interfaces that contain the methods available in Moq fluent API, such as Setup, Callback, Returns, Throws, etc.
&lt;p&gt;
Review the documentation of the available methods on these interfaces for code examples. The way these interfaces are composed, grouped and made visible at different stages during an expectation (i.e. Verifiable is the last "verb" and can't be specified before the Returns) is internal but the API will naturally lead you to the proper way of using it, so don't worry too much about who (and where) exposes these language interfaces. They will show up in Intellisense when it's appropriate. 
&lt;/p&gt;&lt;p&gt;
Do use their documentation to learn about options (especially when there are several overloads available) that may be a better fit for a particular scenario.&lt;/p&gt;</NamespaceSummaryItem>
			<NamespaceSummaryItem name="Moq.Language.Flow" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Moq.Mvc" isDocumented="False" xmlns="">Provides pre-built mocks for testing ASP.NET MVC applications.</NamespaceSummaryItem>
			<NamespaceSummaryItem name="Moq.Properties" isDocumented="False" xmlns="" />
			<NamespaceSummaryItem name="Moq.Protected" isDocumented="True" xmlns="">Importing this namespace will enable the Protected() method on mocks, enabling expectations on protected members by specifying the member name as a string.</NamespaceSummaryItem>
			<NamespaceSummaryItem name="Moq.Stub" isDocumented="False" xmlns="" />
		</NamespaceSummaries>
	</PropertyGroup>
	<!-- There are no properties for these groups.  AnyCPU needs to appear in
			 order for Visual Studio to perform the build.  The others are optional
			 common platform types that may appear. -->
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
	</PropertyGroup>
	<!-- Import the SHFB build targets -->
	<Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>
